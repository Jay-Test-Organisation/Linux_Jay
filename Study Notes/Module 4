File Permissions

3 types of Permissions

r - read
w - write
x - execute


Each permissions is controlled at three levels 

u - user -yourself

g - group 

o - other -everyone else on the system



- ls -l abc  -> to display the file permisions of abc

   Current state -   -rw-r--r--

- chmod a-r abc -> remove read permisisons for all users 

    Current state - --w-------

- chmod u+rw abc  -> Add read and write permissions to abc file 

   Current state - -rw-------

- chmod g+rw abc -> Add read write permissions to abc file for group 

   Current State -  -rw-rw----

- chmod o+r abc -> Add read permissions for others 
   
   Current State - -rw-rw-r--

----------------------------------------------------------------------------------------------------------------------------------


Using Numberical Mode


so, for chmod ugo+r  -> user, group and others get read permissions

else you can do chmod 444

Execute - 1
Write - 2
Read -  4


Number Permission              Symbol
0      No Permission           ---
1      Execute                 --x
2      Write                   -w-
3      Execute + write         -wx
4      Read                    r--
5      Read + Execute           r-x
6      Read + Write             rw-
7      Read + Write + Execute   rwx




 Password for root account on EC2 instance is ubuntu 
sd

..
ssh -i openssh_linux_jay.pem ubuntu@52.21.135.179




------------------------------------------------------------------------

To open a file, use cat abc

To add a line to a file --> echo "Hi Hello World" > abc
To add an extra line without deleting the above line to the same file  -> echo "World is beautiful" >> abc     ---> if we only use  one > then it replaces the line with the new message 


 
------------------------------------------------------------------------
Input and Output redirect


Standard Input - stdin  -> file descripter 0
Standard Output - stdout -> file descripter 1
Standard Error - stderr -> file descripter 2


If you want to add the output of a command into a file use this way:

For Eg:    ls -l > abc

This creates a file abc with the contents of the output of the command 



To add an eror from a command to a file use this way, as error descriptor is 2 

   ls -l 2> <errorfile>


------------------------------------------------------------------------

Standard output to a file using tee command 






------------------------------------------------------------------------
Tee Command 


uou can use tee command to run a command  and create a file with the output of the same command 

For Eg:  

echo "I am Jay P"  | tee <abc>    --> This will echo the line and also create a file abc with the line saved in it 



To check how many characters are in a file 

Eg: wc -c <filename>


